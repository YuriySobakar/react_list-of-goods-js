{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","BY_NAME","BY_LENGTH","App","useState","sortType","setSortType","isReversed","setIsReversed","sortedItems","goods","goodsCopy","sort","a","b","localeCompare","length","reverse","sortByType","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"0OAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAU,SACVC,EAAY,WAyBX,IAAMC,EAAM,WACjB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA1BR,SAAoBC,EAAOL,EAAUE,GACnC,IAAMI,EAAS,UAAOX,GAEtB,GAAIK,EACF,OAAQA,GACN,IAAK,SACHM,EAAUC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACzC,MACF,IAAK,WACHH,EAAUC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAW5C,OAJIT,GACFI,EAAUM,UAGLN,EAMaO,CAAWlB,EAAiBK,EAAUE,GAmB1D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UACtB,CAAE,WAAYhB,IAAaJ,IAC7BqB,QAxBW,WACjBhB,EAAYL,IAmBR,iCASA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SAAU,aAAc,CAAE,WAAYhB,IAAaH,IAErDoB,QA9Ba,WACnBhB,EAAYJ,IAwBR,4BAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CAAE,YAAad,IACrDe,QAlCa,WACnBd,GAAeD,IA8BX,sBAQEF,GAAYE,IAEZ,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAxCI,WACZhB,EAAY,IACZE,GAAc,IAmCR,sBAWJ,6BACGC,EAAYc,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAAgCA,GAARA,YC5GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f6b71915.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst BY_NAME = 'byName';\nconst BY_LENGTH = 'byLength';\n\nfunction sortByType(goods, sortType, isReversed) {\n  const goodsCopy = [...goodsFromServer];\n\n  if (sortType) {\n    switch (sortType) {\n      case 'byName':\n        goodsCopy.sort((a, b) => a.localeCompare(b));\n        break;\n      case 'byLength':\n        goodsCopy.sort((a, b) => a.length - b.length);\n        break;\n      default:\n        break;\n    }\n  }\n\n  if (isReversed) {\n    goodsCopy.reverse();\n  }\n\n  return goodsCopy;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const sortedItems = sortByType(goodsFromServer, sortType, isReversed);\n\n  const sortByName = () => {\n    setSortType(BY_NAME);\n  };\n\n  const sortByLength = () => {\n    setSortType(BY_LENGTH);\n  };\n\n  const makeReversed = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const reset = () => {\n    setSortType('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info',\n            { 'is-light': sortType !== BY_NAME })}\n          onClick={sortByName}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button', 'is-success', { 'is-light': sortType !== BY_LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', { 'is-light': !isReversed })}\n          onClick={makeReversed}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReversed)\n          && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {sortedItems.map(good => (\n          <li data-cy=\"Good\" key={good}>{ good }</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}